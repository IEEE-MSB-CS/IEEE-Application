// Generated by view binder compiler. Do not edit!
package com.ieee.events.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ieee.events.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSignUpBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView andText;

  @NonNull
  public final View centerOfSignIn;

  @NonNull
  public final TextView noAccountTextView;

  @NonNull
  public final TextView orText;

  @NonNull
  public final TextView termsOfUse;

  @NonNull
  public final TextView youAgreeTo;

  private FragmentSignUpBinding(@NonNull LinearLayout rootView, @NonNull TextView andText,
      @NonNull View centerOfSignIn, @NonNull TextView noAccountTextView, @NonNull TextView orText,
      @NonNull TextView termsOfUse, @NonNull TextView youAgreeTo) {
    this.rootView = rootView;
    this.andText = andText;
    this.centerOfSignIn = centerOfSignIn;
    this.noAccountTextView = noAccountTextView;
    this.orText = orText;
    this.termsOfUse = termsOfUse;
    this.youAgreeTo = youAgreeTo;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSignUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.and_Text;
      TextView andText = ViewBindings.findChildViewById(rootView, id);
      if (andText == null) {
        break missingId;
      }

      id = R.id.centerOfSignIn;
      View centerOfSignIn = ViewBindings.findChildViewById(rootView, id);
      if (centerOfSignIn == null) {
        break missingId;
      }

      id = R.id.noAccountTextView;
      TextView noAccountTextView = ViewBindings.findChildViewById(rootView, id);
      if (noAccountTextView == null) {
        break missingId;
      }

      id = R.id.orText;
      TextView orText = ViewBindings.findChildViewById(rootView, id);
      if (orText == null) {
        break missingId;
      }

      id = R.id.termsOfUse;
      TextView termsOfUse = ViewBindings.findChildViewById(rootView, id);
      if (termsOfUse == null) {
        break missingId;
      }

      id = R.id.you_agree_to;
      TextView youAgreeTo = ViewBindings.findChildViewById(rootView, id);
      if (youAgreeTo == null) {
        break missingId;
      }

      return new FragmentSignUpBinding((LinearLayout) rootView, andText, centerOfSignIn,
          noAccountTextView, orText, termsOfUse, youAgreeTo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
